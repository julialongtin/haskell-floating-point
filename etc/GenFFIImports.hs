#!/usr/bin/env stack
-- stack --resolver lts-14.18 script
import Data.List

genVariants :: String -> String -> String -> String
genVariants cname hsname hstype =
  "foreign import ccall unsafe \"" ++ cname ++ "\"\n\
  \  " ++ hsname ++ " :: Int -> " ++ hstype ++ "\n\
  \foreign import ccall unsafe \"" ++ cname ++ "_up\"\n\
  \  " ++ hsname ++ "_up :: " ++ hstype ++ "\n\
  \foreign import ccall unsafe \"" ++ cname ++ "_down\"\n\
  \  " ++ hsname ++ "_down :: " ++ hstype ++ "\n\
  \foreign import ccall unsafe \"" ++ cname ++ "_zero\"\n\
  \  " ++ hsname ++ "_zero :: " ++ hstype ++ "\n"

twoVariants :: String -> String -> String -> String
twoVariants cname hsname hstype =
  "foreign import ccall unsafe \"" ++ cname ++ "_up\"\n\
  \  " ++ hsname ++ "_up :: " ++ hstype ++ "\n\
  \foreign import ccall unsafe \"" ++ cname ++ "_down\"\n\
  \  " ++ hsname ++ "_down :: " ++ hstype ++ "\n"

simple :: String -> String -> String
simple cname hstype = genVariants cname hsname hstype
  where hsname = case stripPrefix "rounded_hw_" cname of
                   Just n -> "c_rounded_" ++ n
                   Nothing -> "c_" ++ cname

main = putStr $ init $ unlines
  ["-- This file was generated by etc/GenFFIImports.hs"
  ,"-- DO NOT EDIT this file directly!"
  ,"{-# LANGUAGE MagicHash #-}"
  ,"{-# LANGUAGE UnliftedFFITypes #-}"
  ,"module FFIImports where"
  ,"import Data.Int"
  ,"import Data.Word"
  ,"import GHC.Exts"
  ,""
  ,simple "rounded_hw_add_float" "Float -> Float -> Float"
  ,simple "rounded_hw_sub_float" "Float -> Float -> Float"
  ,simple "rounded_hw_mul_float" "Float -> Float -> Float"
  ,simple "rounded_hw_div_float" "Float -> Float -> Float"
  ,simple "rounded_hw_sqrt_float" "Float -> Float"
  ,simple "rounded_hw_fma_float" "Float -> Float -> Float -> Float"
  ,simple "rounded_hw_int64_to_float" "Int64 -> Float"
  ,simple "rounded_hw_word64_to_float" "Word64 -> Float"
  ,genVariants "rounded_hw_sum_float" "c_rounded_sum_ptr_float" "Int -> Int -> Ptr Float -> IO Float"
  ,genVariants "rounded_hw_sum_float" "c_rounded_sum_bytearr_float" "Int -> Int -> ByteArray# -> Float"
  ,twoVariants "rounded_hw_interval_mul_float" "c_interval_mul_float" "Float -> Float -> Float -> Float -> Float"
  ,twoVariants "rounded_hw_interval_div_float" "c_interval_div_float" "Float -> Float -> Float -> Float -> Float"
  ,simple "rounded_hw_add_double" "Double -> Double -> Double"
  ,simple "rounded_hw_sub_double" "Double -> Double -> Double"
  ,simple "rounded_hw_mul_double" "Double -> Double -> Double"
  ,simple "rounded_hw_div_double" "Double -> Double -> Double"
  ,simple "rounded_hw_sqrt_double" "Double -> Double"
  ,simple "rounded_hw_fma_double" "Double -> Double -> Double -> Double"
  ,simple "rounded_hw_int64_to_double" "Int64 -> Double"
  ,simple "rounded_hw_word64_to_double" "Word64 -> Double"
  ,genVariants "rounded_hw_sum_double" "c_rounded_sum_ptr_double" "Int -> Int -> Ptr Double -> IO Double"
  ,genVariants "rounded_hw_sum_double" "c_rounded_sum_bytearr_double" "Int -> Int -> ByteArray# -> Double"
  ,twoVariants "rounded_hw_interval_mul_double" "c_interval_mul_double" "Double -> Double -> Double -> Double -> Double"
  ,twoVariants "rounded_hw_interval_div_double" "c_interval_div_double" "Double -> Double -> Double -> Double -> Double"
  ]
